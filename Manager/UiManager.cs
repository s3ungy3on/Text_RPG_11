using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Text_RPG_11;

namespace Text_RPG_11
{
    #region 초기설정
    public class UIManager
    {
        public string act; // 행동 번호 입력
        public string name; // 플레이어 이름
        public string job; // 플레이어 직업

        private readonly GameManager gameManager;


        // 로고
        public List<string> logo1 = new List<string>(); // 로고1 0~14 -> 1차제목, 15~18 -> 1차 소제목
        public List<string> logo2 = new List<string>(); // 로고2 

        public List<string> story = new List<string>(); // 시작 스토리

        public List<string> introArt = new List<string>(); // 인트로 아스키아트

        private readonly List<string> battleLog = new List<string>();
        private const int LogShowCount = 6;           // 화면에 보일 로그 줄 수
        private const int MAX_LOG_SIZE = 200;
        private const int LOG_TRIM_SIZE = 40;
        private const int HpBarLength = 24;           // HP바 길이
        private const int MpBarLength = 24;           // MP바 길이

        public UIManager(GameManager manager)
        {
            gameManager = manager;
        }

        public void SafeResize(int cols, int rows)
        {
            try
            {
                cols = Math.Max(1, cols);
                rows = Math.Max(1, rows);

                if (Console.LargestWindowWidth > 0) cols = Math.Min(cols, Console.LargestWindowWidth);
                if (Console.LargestWindowHeight > 0) rows = Math.Min(rows, Console.LargestWindowHeight);
                int bufW = Math.Max(Console.BufferWidth, cols);
                int bufH = Math.Max(Console.BufferHeight, rows);
                if (bufW != Console.BufferWidth || bufH != Console.BufferHeight)
                    Console.SetBufferSize(bufW, bufH);
                Console.SetWindowSize(cols, rows);
            }
            catch (Exception ex) when (
                ex is IOException ||
                ex is PlatformNotSupportedException ||
                ex is ArgumentOutOfRangeException)
            {
                Console.WriteLine($"콘솔 크기 변경 실패 {ex.GetType().Name} 발생");
            }
        }
        #endregion

        #region 인트로
        public void Intro() // 시작시 초기 설정 및 스토리 화면
        {
            string name = "";
            string act = "";
            Job selectedJob = null;

            // 1차 제목
            logo1.Add("      ...                                                                                                     ...                                                         ..          .x+=:.   \r\n");
            logo1.Add("  .zf\"` `\"tu                                                                                  oec :       .zf\"` `\"tu                                                    dF           z`    ^%  \r\n");
            logo1.Add(" x88      '8N.                                       x.    .                          u.     @88888      x88      '8N.                                      u.    u.   '88bu.           .   <k \r\n");
            logo1.Add(" 888k     d88&      .u          u          uL      .@88k  z88u        .u        ...ue888b    8\"*88%      888k     d88&      .u         uL          .u     x@88k u@88c. '*88888bu      .@8Ned8\" \r\n");
            logo1.Add(" 8888N.  @888F   ud8888.     us888u.   .ue888Nc.. ~\"8888 ^8888     ud8888.      888R Y888r   8b.         8888N.  @888F   ud8888.   .ue888Nc..   ud8888.  ^\"8888\"\"8888\"   ^\"*8888N   .@^%8888\"  \r\n");
            logo1.Add(" `88888 9888%  :888'8888. .@88 \"8888\" d88E`\"888E`   8888  888R   :888'8888.     888R I888>  u888888>     `88888 9888%  :888'8888. d88E`\"888E` :888'8888.   8888  888R   beWE \"888L x88:  `)8b. \r\n");
            logo1.Add("   %888 \"88F   d888 '88%\" 9888  9888  888E  888E    8888  888R   d888 '88%\"     888R I888>   8888R         %888 \"88F   d888 '88%\" 888E  888E  d888 '88%\"   8888  888R   888E  888E 8888N=*8888 \r\n");
            logo1.Add("    8\"   \"*h=~ 8888.+\"    9888  9888  888E  888E    8888  888R   8888.+\"        888R I888>   8888P          8\"   \"*h=~ 8888.+\"    888E  888E  8888.+\"      8888  888R   888E  888E  %8\"    R88 \r\n");
            logo1.Add("  z8Weu        8888L      9888  9888  888E  888E    8888 ,888B . 8888L         u8888cJ888    *888>        z8Weu        8888L      888E  888E  8888L        8888  888R   888E  888F   @8Wou 9%  \r\n");
            logo1.Add(" \"\"88888i.   Z '8888c. .+ 9888  9888  888& .888E   \"8888Y 8888\"  '8888c. .+     \"*888*P\"     4888        \"\"88888i.   Z '8888c. .+ 888& .888E  '8888c. .+  \"*88*\" 8888\" .888N..888  .888888P`   \r\n");
            logo1.Add("\"   \"8888888*   \"88888%   \"888*\"\"888\" *888\" 888&    `Y\"   'YP     \"88888%         'Y\"        '888       \"   \"8888888*   \"88888%   *888\" 888&   \"88888%      \"\"   'Y\"    `\"888*\"\"   `   ^\"F     \r\n");
            logo1.Add("      ^\"**\"\"      \"YP'     ^Y\"   ^Y'   `\"   \"888E                   \"YP'                      88R             ^\"**\"\"      \"YP'     `\"   \"888E    \"YP'                      \"\"                  \r\n");
            logo1.Add("                                      .dWi   `88E                                             88>                                 .dWi   `88E                                                  \r\n");
            logo1.Add("                                      4888~  J8%                                              48                                  4888~  J8%                                                   \r\n");
            logo1.Add("                                       ^\"===*\"`                                               '8                                   ^\"===*\"`                                                    \n");

            // 1차 소제목
            logo1.Add("\t\t\t\t\t\t\t\t\t\t▗     ▛▀▖         ▜    ▐  ▗       \r\n");
            logo1.Add("\t\t\t\t\t\t\t\t\t\t▄ ▛▀▖ ▙▄▘▞▀▖▌ ▌▞▀▖▐ ▌ ▌▜▀ ▄ ▞▀▖▛▀▖\r\n");
            logo1.Add("\t\t\t\t\t\t\t\t\t\t▐ ▌ ▌ ▌▚ ▛▀ ▐▐ ▌ ▌▐ ▌ ▌▐ ▖▐ ▌ ▌▌ ▌\r\n");
            logo1.Add("\t\t\t\t\t\t\t\t\t\t▀▘▘ ▘ ▘ ▘▝▀▘ ▘ ▝▀  ▘▝▀▘ ▀ ▀▘▝▀ ▘ ▘\n");

            logo2.Add("                                                                                                                                                                                    \r\n");
            logo2.Add(" ▄▄▄▄▄                                                                                        ▄▄▄▄             ▄▄                                                      ▄▄           \r\n");
            logo2.Add(" ██▀▀▀██                                                                                     ██▀▀▀             ██                                                      ██           \r\n");
            logo2.Add(" ██    ██  ██    ██  ██▄████▄   ▄███▄██   ▄████▄    ▄████▄   ██▄████▄             ▄████▄   ███████             ██         ▄████▄    ▄███▄██   ▄████▄   ██▄████▄   ▄███▄██  ▄▄█████▄ \r\n");
            logo2.Add(" ██    ██  ██    ██  ██▀   ██  ██▀  ▀██  ██▄▄▄▄██  ██▀  ▀██  ██▀   ██            ██▀  ▀██    ██                ██        ██▄▄▄▄██  ██▀  ▀██  ██▄▄▄▄██  ██▀   ██  ██▀  ▀██  ██▄▄▄▄ ▀ \r\n");
            logo2.Add(" ██    ██  ██    ██  ██    ██  ██    ██  ██▀▀▀▀▀▀  ██    ██  ██    ██            ██    ██    ██                ██        ██▀▀▀▀▀▀  ██    ██  ██▀▀▀▀▀▀  ██    ██  ██    ██   ▀▀▀▀██▄ \r\n");
            logo2.Add(" ██▄▄▄██   ██▄▄▄███  ██    ██  ▀██▄▄███  ▀██▄▄▄▄█  ▀██▄▄██▀  ██    ██            ▀██▄▄██▀    ██                ██▄▄▄▄▄▄  ▀██▄▄▄▄█  ▀██▄▄███  ▀██▄▄▄▄█  ██    ██  ▀██▄▄███  █▄▄▄▄▄██ \r\n");
            logo2.Add(" ▀▀▀▀▀      ▀▀▀▀ ▀▀  ▀▀    ▀▀   ▄▀▀▀ ██    ▀▀▀▀▀     ▀▀▀▀    ▀▀    ▀▀              ▀▀▀▀      ▀▀                ▀▀▀▀▀▀▀▀    ▀▀▀▀▀    ▄▀▀▀ ██    ▀▀▀▀▀   ▀▀    ▀▀    ▀▀▀ ▀▀   ▀▀▀▀▀▀  \r\n");
            logo2.Add("                                ▀████▀▀                                                                                             ▀████▀▀                                         \r\n");
            logo2.Add("                                                                                                                                                                                    \r\n");


            logo2.Add(" .-.         .--.       .-.          .-..-. _ .-.  .-.    .-..-.             .-.    _             \r\n");
            logo2.Add(".' `.       : .--'      : :          : :' ;:_;: :  : :    : `' :             : :   :_;            \r\n");
            logo2.Add("`. .'.--.   `. `.  .--. : :   .--.   :   ' .-.: :  : :    : .. : .--.   .--. : `-. .-.,-.,-. .--. \r\n");
            logo2.Add(" : :' .; :   _`, :' .; :: :_ ' .; :  : :.`.: :: :_ : :_   : :; :' .; ; '  ..': .. :: :: ,. :' '_.'\r\n");
            logo2.Add(" :_;`.__.'  `.__.'`.__.'`.__;`.__.'  :_;:_;:_;`.__;`.__;  :_;:_;`.__,_;`.__.':_;:_;:_;:_;:_;`.__.'\r\n");
            logo2.Add("                                                                                                  \r\n");
            logo2.Add("                                                                                                  \r\n");

            //시작시 컴퓨터 하는 모습이 나감
            story.Add("변대섭: 아 간만에 롤이나 해볼까"); // [0]
            story.Add("변대섭: 솔킬머신 변대섭 출동이요~"); // 이 글이 나간 이후 1차제목과 소제목을 넣음 [1]
            story.Add("변대섭: 어 뭐지? 원래 롤에 이런 문구가 있었나..??");
            story.Add("변대섭: 하도 패치 하니까 뭐가 바꼈는지도 모르겠네");
            story.Add("변대섭: 암튼 게임만 잘 하면 되지");
            story.Add("변대섭: 자 드가자~"); // 이 글이 나간 이후 다시 컴퓨터 하는 모습 [5]
            story.Add("System: 소환사의 협곡에 오신것을 화ㄴ.영...ㅎ.ㅏ...ㅂ.."); // [6]
            story.Add("치지지...치직......치지지지직....."); // [7]
            story.Add("변대섭: 뭐야 이거 왜 이래..???");  // [8]
            story.Add("System: 소환사 한 명이 게임을 종료했습니다"); // [9]
            story.Add("변대섭: 아 콩순이 1명 때문에 렉 걸린건가"); // [10]
            story.Add("변대섭: 진짜 시작부터 조짐이 안 좋네"); // [11]
            story.Add("System: 소환사 한 명이 게임을 종료했습니다"); // [12]
            story.Add("변대섭: 와 우리팀 ㄹㅈㄷ ㅋㅋㅋㅋㅋㅋㅋㅋㅋ"); // [13]
            story.Add("변대섭: 시작하자마자 2명이 튕기냐"); // [14]
            story.Add("System: 소환사 한 명이 게임을 종료했습니다"); // [15]
            story.Add("System: 소환사 한 명이 게임을 종료했습니다"); // [16]
            story.Add("변대섭: 뭐지...롤 서버가 지금 맛탱이가 간건가"); // [17]
            story.Add("System: 플레이어들이 게임에 접속하지 않았습니다. 60초 내에 /다시하기를 입력하여 게임을 재시작 할 수 있습니다."); // [18]
            story.Add("변대섭: 아 시간만 버렸네 다시하기 gg"); // [19]
            story.Add("System: 게임을 재시작합니다"); // [20]
            story.Add("System: 챔피언 구성 중....");
            story.Add("System: 미니언 구성 중...."); // [22]
            story.Add("삐------삐-------"); // [23]
            story.Add("System: 에러 발생 소환사를 불러옵니다"); // [24]
            story.Add("변대섭: 이게 뭔 말이......으아아아아아아"); // [25]
            story.Add("............................................................"); // [26]
            story.Add("............................................................"); // [27]
            story.Add("???: 영웅은 죽지 않아요"); // 메르시 아트 출력 [28]
            story.Add("변대섭: 으...으윽...머리야..."); // [29]
            story.Add("???: 드디어 일어나셨군요"); // [30]
            story.Add("변대섭: 으..어???? 아니 당신은 메르시 아닌가요?"); // [31]
            story.Add("소라카: 네?? 저는 소라카 입니다만...."); // 소라카 아트 출력 [32]
            story.Add("변대섭: 아 그렇군요"); // [33]
            story.Add("변대섭: 근데 제가 왜 여기 있는거죠??"); // [34]
            story.Add("소라카: 지금 현재 미니언과 중립몹 즉 정글과 용 바론 등이 손을 잡고 반란을 일으켰습니다"); // [35]
            story.Add("소라카: 그래서 게임 시스템이 비상사태를 인지하고 소환사님을 부른겁니다.");
            story.Add("소라카: 아마 들어오기 전에 문구가 있었을텐데 못 보셨을까요??"); // [37]
            story.Add("변대섭: (아 들어오기 전에 처음 본 문구가 그건가 보네)"); // [38]
            story.Add("변대섭: 본거 같아요");
            story.Add("변대섭: 그래서 제가 뭘 하면 되는거죠"); // [40]
            story.Add("소라카: 소환사님은 여기서 직접 챔피언을 골라 플레이 하시면서 반란을 일으킨 몹들을 잡으시면 됩니다"); // [41]
            story.Add("변대섭: (뭐야 롤 현실판 아니야? 이거 완전 개꿀 체험이자나)"); // [42]
            story.Add("변대섭: 그런거라면 맡겨만 주세요 제가 다 해결하겠습니다");
            story.Add("변대섭: 어디보자 골드가....??????"); // [44]
            story.Add("소라카: 아 이걸 말을 안 해줬네요"); // [45]
            story.Add("소라카: 지금 시스템 에러때문에 싸우시고 직접 얻으셔야 합니다.");
            story.Add("소라카: 시간이 지나도 돈은 들어오지 않으니 몹들을 잡으셔야 돈과 아이템을 얻을 수 있습니다."); // [47]
            story.Add("변대섭: 아니 그럼 어떻게 해요 원래 게임도 500G는 주고 하는데"); // [48]
            story.Add("소라카: 대신 시스템에서 퀘스트를 받을 수 있습니다."); // [49]
            story.Add("소라카: 퀘스트를 완료할 시 골드와 경험치 아이템을 얻을 수 있는데 그래도 힘드실까요?");
            story.Add("소라카: 그게 아니면 혹시 쫄리신건가요? 쫄?"); // [51]
            story.Add("변대섭: 쫄긴 누가 쫄았다고 그래요 바로 갔다 오겠습니다."); // 이후로 2차제목과 소제목 등장 [52]



            introArt.Add(
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@====-;=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$===*;:-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@======*:-!=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@==========:;==@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@==========;~;=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@==========;-*$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=..-=;:=;-*=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;      ~*!;!=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@; ,    ~-,--!*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@; *    ~:-!*~-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;@@@@@@; !.   ::-;!~-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,~::::::::::::::::::::::::::::;@@@@@@;      --,-~--@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,-:@@@@@@@.      ~,,;*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@~,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@@@@@@@   .    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,-;@@@@@**~.   .-*********===@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,~;@@@@****:~   ,;!********===@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,~;@@@!**!!;:    ~;;!*******===@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,,-~,,,,,,,,,,,,,,~;@@@**!;;;:  ,~;;;;;******===@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,-:;-,,,,,,,,,,,,,~;@@@*!;;;;:,-:;;;;;;*******===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,-;;:-,,,,,,,,,,,,~;@@@*;;;;;;;;;;;;;;;;******===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,-;;~,,,,,,,,,,,,,~;@@!*;;;;;;;;;;;;;;;;******===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,-@@**;;;;;;;;;;;;;;;;******===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@***;;;;;;;;;;;;;;;;******===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,:::::-,,,,,,,,,,,,,@***;;;;;;;;;;;;;;;;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,:::::-,,,,,,,,,,,,-;***;;;;;;;;;;~    ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,-:::::-,,,,,,,,,,,,~;;!*;;;;;;;;;;~    ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,::::::-,,,,,,,,,,,,~; :!;;;;;;;;;;~    ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,::;::~-,,,,,,,,,,,,~~  :;;;;;;;;;;~.   ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,:;*;:~,,,,,,,,,,,,,~,   ;;;;;;;;;;:,   ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,::;;:-,,,,,,,,,,,,,-.  -;;;;;;;;;;;-   ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,:::::-,,,,,,,,,,,,.    -~~~~~~~~~~~.   ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@~,,,,,,,,~:::::~,......          .               ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@::::::::@                                ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@::::::::::~--~~~~~~~~~~--- :::::,        ;;*****===@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@                                   ... ..... ........,,,,,,,,,=@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@                                             .................=@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@   ,------------------------------~~~~~~~--~~~~~~~~~~~~~~~~~:;=@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@----------------------------------------~~~~~~~~~~~~~~~~~;==@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@                             .........  ...,,,,,,,,,,....~==@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@@@@##########  ..:########$!  ..~==@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@@@*$#########  ..:#######$**  ..~==@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@***$#####$###  ..~$$$$$$$==*  ..~===@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@**=######*###  ..-****=====*  ..~===@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@**=#####=*###  ..-****=====*  ..~===@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@**=#####=*###  ..-****=====*  ..~===@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@*=$#####=*###  ..-****=====*  ..~===@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@@#######=*###  ..,=$$======!  ..,==@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@@#######@####  ...$$$$@@@@@   ...@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@########@####  ...$$$$#@@@@   ...@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@########@####  ...$$$$#@@@@   ...@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@#######@@####  ...$$$$$@@@@   ...@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@@#######@@####  ...$$$$$@@@@   ...@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@########@@####  ...$$$$#@@@@   ...@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@########@#####  ...$$$$#@@@@   ...@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@   ...@@@@@@@@@   ...@@@#######@@#####  ...$$$$$@@@@   ...@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n");

            introArt.Add(
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@..\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.....\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  ..... \r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     ...-@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         ..@@@\r\n" +
                "@-~@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-,,@@@@@@             .@@@@@\r\n" +
                "@ ... @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@~ @@@@@@ ...,,@,                 @@@@@@@\r\n" +
                "@@,.....@@@@@@@@@@@@@@@@@@@@@@@@@@;:  ,~;@@@@@@@@@@@@@@@@@@  @@@@@ ......                 @@@@@@@@@@\r\n" +
                "@@@@.......@@  @@@@@@@@  @@@@@@@@;~~  .~::@@@@@@@@@@@@@@@.  ,@,   ....                 .@@@@@@@@.~;@\r\n" +
                "@@@@@....   ,@~,@@@@@@@, .@@@@@@~:~-~  ..~:@@@@@@@@@@@@@  ..~   ...,                 ,@@@@@@@@.... @\r\n" +
                "@@@@@@...      -,..~@@@@.  @@@@@::~,-. .-,~~@@@@@@@@@@   .... ....                .@@@@@@@@. ....~@@\r\n" +
                "@@@@@@@@         .,...@@@-. @@@@~  . ...,,::@@@@@@@@..  ,...-~~-             @@@@@@@@@       ...@@@@\r\n" +
                "@@@@@@@@@@         ,,., . ,.  @@~    .,...-:@@@@@@.   ,~,-:::-,         @@@@@@@@             ..@@@@@\r\n" +
                "@@@;~,@@@@@@@        ......,.        ,~,;,;:@@@@@@. ..-~:;;:      .....,-                    @@@@@@@\r\n" +
                "@@@;,..... @@@@@      ,:::,,:,.  . ..   ,-:;@@@@@~ .;--,!;;    .......,                   @@@@@@@@@@\r\n" +
                "@@@@ .....    .@-,..     ;;;-,,.,..,.  :.;~@@@@@@,,..~-!;:.. ....,,                      @@@@@@@@@@@\r\n" +
                "@@@@@ ....        .,......,,,-~-,,,,*,-=~~:@@@@@ .....-::::::-                       @@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@..          . ,..--.,,-,,,.,,.. .-:@@@@, ... .;;:~--. .                 @@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@              ,:;;;~.....,... .=.@@@-,.,:.,.;;:-....,,.,,,-;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@            -::,.,..,....-@@@@@....;..,!!;;:...,,,             .... .....,;@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@,.,.....,,:.,:..$~,,,; @@@@, .-~:,-...                       .  ....,~@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@~,......~:::,,~.~*$:,===@@@,  .~--!;:...                          ...@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@            .,..;~~--;$$;*==@@@  ..-~*;;;:~,....                     .. @@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@~...              ..~:;!~~~!*!!*:,, .....~:;~. ,, ,......             .   .@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@,...            ...-::!!:--=*!;.     .,..~:::...    .. .-.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@-...         ,..,.    -;;,,:~, ~.   ,;~.,;;,::...            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@,@@@@@@@ -,     ..:;-.;;    ..,:: ..@@-..-.....             .@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@         ,.,;   .      .$$=.!.@@==@  .,..,             .@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@          ,..    .    ...=$#:..=!*=!@@    ,,.             ....@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@..        @,,.    ,.    .,~$$#: ...=*@@@@    ..-@@@         .....,;@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@~..      @@-.   ...-,....,,*$$*:.  ..@@@@@@       @@@@@@     ......,@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@..   @@@@@    @,,,,~-,,--,;$$;*~   .@@@@@@@@     .@@@@@@@@@@~..,-- @@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@.   @@:~,..-~~-,-~$=$=!.. ..@@@@@@@@.   .. @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@    @@@@-..    .-:$==*==:.. .@@@@@@@@@@..... @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@..  @@@@~...  .-;*$$$*==*,- .@@@@@@@@@@@.....@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@...@@@@@@~,,...-!*=$$*==@!;~. .@@@@@@@@@@@@....@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@..@@@@@@@,-,,,.;$=$===*@@@*:,. :@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@~~@@@@@@@-~~-,,.!==$==*@@@@@:~,..@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:;~-,.-.*=$===@@@@@:;~..,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@::~-,.-.!$====@@@@@;:~ ..@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!;~,,...*!=====@@@@!;:..~@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;!-,,,..::**====@@@*!~.--@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@!;!--,,..~:**==$;@@@@*:~-~@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@;;*--,,,..:**==~,,-@@*;--;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@*;;*~,,,,,,-===*...,,@@!,-;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@*:!!~-,-!.,*~==.....,@@!--;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@=$$$:~~:~-!-  ~. ...,,@!~-;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@==$*!;~~~,*-.  .. ..,,@!--;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@:==*==::~~:*,.. .....,,,;-:;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@$=$@@;:~:=~..-,..,..,,,!~~:!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@===$@@*~:~*-, .*,.,..,,-=*::;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@!-*=@@@@*~::..,. .*,,,,,,-=!=:;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@*****@@@@*;~;*..,..-;,,,,,-=*=:;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@**!=,@@@@@*;:;*-..,,,:;,,,,-***=;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@;**=-@@@@@@*!:;;:..-,,,$~,--,=$==!:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n");

            introArt.Add(
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!::@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.!!,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!!-@@@@@..@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;!!~@@@@@@@-,@@@@@@@@@@@@@@@@@,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!!!:@@@@@@@@;,@@@@@@@@@@@@@@@@.-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@~!!-@@@@@@@@.:.@@@@@@@@@@@@@@@@~,@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-*!.@@@@@@@@@;,.@@@@@@@@@@@@@@@@-,... ...,.@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**!@@@@@@@@@!!;-@@@@@@@@@@@@@@@@,--,~  --.@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*!,@@@@@@@@@;;~@@@@@@@@@@@@.   -~--,..~;.@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*!-@@@@@@@@@@;~@@@@@@@@@@@@@@@,,,-~!:~~*~@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;*:@@@@@@@@@@;~-@@@@@@@@@@@.-,~:!:,,..,;-,,@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-*!@@@@@@@@@@;:-@@@@@@@@@@@@@,~!=,,,,:~~!,@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.!!;,@@@@,~  ::-@@@@@@@@@@@@@@;!*,,,-~:**;@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!!!-@@,.--:-~@@@@@@@@@@@@@@~~,*-!~-.~=!~@@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:!;:. ,   .~,    -;- .-.--~, ~ *!:~;!!!;~.@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-!;;~~,   -~..  ~!!:~-,    ,:-~==!**:-  ;!!,@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.!;;:,-  .-:-  -:;;;:,.   -;--:,,.-!~---~!*!,@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@~;:~~.  ~:-,,,~~;:-~;!!!~;~-      .,,,~!-!-@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@~::~:- ~-:-,:::-;*=====**, ~,.!:. --,,:,-.@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@::::~;~!, -:;;!*=***===!:,,;;!=:.,-,.-~.@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,-~;-;~:-.-;*!****!=$$=~:;!;;!$;~,.,-@@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,-~~~~:=-~:;****=*$$==;!!;!;;!=*~~,,~,@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...-~!;~~;**!***!*=====**;!;!*$===:~~-..@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@.-@@@@@@@@@@@@@@@@@@.~!!*!;!::!=!;*=!;!==**!*!!!!*=====,-~~~-@@@@@@@@@@@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@~:@@@@@@@@@@@@@@@@@.~*****!!:***;;**!!*=*;:!*-!!!=====*@@~::,.@@@@@@,,.@@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@@;;-@@@@@@@@@@@@@@@.!===*=***!=*=;~,;!!;!;.-.~;;;*====!~@@@~:-,@@@@@@.:-.@@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@@!;;:~@@@@@@@@@@@@@@!=*======*!=*==*;;;!;;;;:~~::;*===*:,@@@@.--@@@@@@@;:-.@@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@.*;:::-@@@@@@@@@@@@:=**=;~===;   -***=*!;;!!!-, ;;!===~.@@@@@@@@@@@@@@@-*:-,@@@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@@.!;::~~-.@@@@@@@@@@=***$$===*!  ;!!!*!~::;;:    !;;*==:.@@@@@@@@@@@@@@@,**;~-.@@@@@@@@\r\n" +
                "@@@@@@@@@@@@@,;*!:::~~~@@@@@@@@@!=**=$$===!!.-~:;::*-:;;~   .*=;;;=*-@@@@@@@@@@@@@@@@@***;~,..@@@@@@\r\n" +
                "@@@@@@@@@@@@,*;:!!;::::,@@@@@@@-=**==$$==*;*~   ..,!;:~,. -.-$=;;;**~@@@@@@@@@@@@@@@@@:***:~-,..@@@@\r\n" +
                "@@@@.!;;;:::;;!!!!!;:::-,@@@@@@-=====$$~~!=*;~,..,,.;,.    ~!*=;!===;@@@@@@@@@@@@@@@@@@***!~:-,,,@@@\r\n" +
                "@@@@-*=*===!!;!!**!!!;;~~@@@@@@-=====*$*!***!**!!:  .~     ~!;!!*$===!@@@@@@@@@@@@@@@@@****::;~--,@@\r\n" +
                "@@@@-**!*====**;:::;!!;,,@@@@@@-==**!:!!**;;:-,.,..  :.   -;~;*======*~@@@@@@@@@@@@@@@@*!**!~*;~:~,@\r\n" +
                "@@@@@*!;;!*!*=;:$!:::;, ~:.@@@@-=*;=*;~-.,      -;!*=-,    .~;*!!*;*===;@@@@@@@@@@@@@@@*!!*****;;;:.\r\n" +
                "@@@@@,*;:;!**!;:==$=:~,-,:~,@@@-==*===*!:~-     :!!*==!-. .;$=!!;!!=$$$=,@@@@@@@@@@@@@@*!!******!;!;\r\n" +
                "@@@@@@!*!;;**;;::==~::~:~:;;,@@,==**=$==**!:.   !*=;:~~;-;:!$$$**!*$=*=;@@@@@@@@@@@@@@@*!!********!!\r\n" +
                "@@@@@@.==*!!*;;;:::~~:~-. .~!.@@!***=$$====*;. ,!*:-,~~-;***$==$*===*=*~-@@@@@@@@@@@@@@*!!!****===**\r\n" +
                "@@@@@@@!=====!;;;;;::;:-. .-;~@@@*;*==$===*~:~  !**:!*!****========;***~::@@@@@@@@@@@@@!*!*****=====\r\n" +
                "@@@@@@,:;*==*!;;;;;;;:::- -:!.@@@~!!*=$===.  ~~ ;**:*$=!!!*!*!*!==**!*!!!=,@@@@@@@@@@@~!!!*****=====\r\n" +
                "@@@@@@!:;!*==!;;;;;;;;:::,~;,@@@@,;;*===== . ~!,.!==*=$$=**=**=!*$*=$=*!!~.@@@@@@@@@@@!!*******=====\r\n" +
                "@@@@@@*!*===$$*!;;;;;:::::!:@@@@@@.!*====: , ~*, .*===*==**=*==**======!!;:-@@@@@@@@@-!!******======\r\n" +
                "@@@@@@!==$$$=$=*!!!;;~~:;*;@@@@@@@@,;**==, ,,;*.  .:====!**=************!;;:-@@@@@@@.;********======\r\n" +
                "@@@@@@@........*!;;;:,.,!!;@@@@@@@.  .-..   !*.    ~*=$=!******!****!==$!;;;:-.    ,:*********======\r\n" +
                "@@@@@@@@@@. .  !;;;;;:--:;;@@@@-,~@@@@@@@@@@@@@@@.~;!*==!***;*!***!;!=*!;;;!!;:~~~:;**********======\r\n" +
                "@@@@@@@-,,,,.@@!;;;!!!!-.@@@@@:::-@@@@@@@@@@@@@@@:;!!!;!*!***====!:~ .-::::;!!!!!!!*===******=======\r\n" +
                "@@@@@~~~~~~-@@@.*!!!!*;;-@@@@~;;;~~.@@@@@@@@@@@,;!!!!!!:;!*!*=!**;~@@@@,-~~;;!!!!!*====*****========\r\n" +
                "@@@-~:;!!.@@@@@;!;!;;;!;:@@@@!;;;::~,,@@@@@@@@~!!!*;!!;-;**!*!***:,@@@@@,--~;;;;:;=====*=**=========\r\n" +
                "@-::;!**;@@@@@@*;;;;:;!-@@@@@;;;;;;:~.@@@@@@,:!*!*!!!:-.;****!**!-@@@@@@@.,-~::~;========*=====$$$$$\r\n" +
                ".;!**==*~@@@@@@*;!;;;:~@@@@,!;;;;!;;;~.@@@@:!!***!;;~-.@;*!*!!**~@@@@@@@@@,,---~========$=====$$$$$$\r\n" +
                ".!*=$$=*-@@@@@,*!!!;;~.@@@@,!!!!!!;;;;- ,~!!***!!;::-,@@;***!***.@@@@@@@@@@@.-~*$======$=====$$$$$$$\r\n" +
                ",*=$$$=*-@@@@.$*!!!!~,.@@@@,!!;!!;;!!!;;!***!!;!;~,~,@@@;***!***@@@@@@@@@@@@@@!$$$$===$$$$==$$$$$$$$\r\n" +
                ",=$$$$=*;:;;=#=**!!!~-,@@@@@:!!!;;!!!!~****!;;;;:-,.@@@@;******.@@@@@@@@@@@@@:=$$$$$$$$$$$$$$$$$$$$$\r\n" +
                ",$$$$==####$$*;**!!!;:.@@@@@@;!!!!!!*;*****;;;;:~-.@@@@@!=***=*@@@@@@@@@@@@@-$$$$$$$$$$$$$$$$$$$$$$$\r\n" +
                ",$$$$###$=!~. *!*!!!!~  ,----:!!!!!=$$=***!;;;:~-,@@@@@@;=**==!@@@@@@@@@@@@.=$$$$$$$$$$$$$$$$$$$$$$$\r\n" +
                ",$$$##$==*!;;;*!!;,!!:~:;;!**==*!!!*$$***!;;::~-@@@@@@@@;=*====!@@@@@@@@@@.$$$$$$$$$$$$$$$$$$$$=$$$$\r\n" +
                ",=$##$$$====*=*!*********=========*==$~!*!;;~~,@@@@@@@@@-**====*!~.@@@@@@.=$$$$$#$$$$$$$$$$$$$!*$$$#\r\n" +
                ",$$#$$$$$$$===*=******===============$*;!;;:-,@@@@@@@@@@,***!====*~@@@@@.$$$$$$##$$$$$$$$$$$$=:*$$##\r\n" +
                ",$$#$=$$$$$$$$===================*==*=$;!;:~@@@@@@@@@@@@@:!*!,:==*~@@@@.=$$$$###$$$$$$$$$$$$$::=$$##\r\n");


            for (int i = 0; i < story.Count; i++)
            {
                if (i == 0)
                {
                    Console.Clear();
                    Console.WriteLine($"{introArt[0],50}");
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 2)
                {
                    Console.Clear();
                    Console.ForegroundColor = ConsoleColor.Cyan;
                    foreach (string str in logo1)
                    {
                        Console.Write(str);
                        Thread.Sleep(100);
                    }
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 6)
                {
                    Console.Clear();
                    Console.ResetColor();
                    Console.WriteLine($"{introArt[0],50}");
                }
                else if (i == 7)
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                }
                else if (i == 8)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 9)
                {
                    Console.ResetColor();
                }
                else if (i == 10)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 12)
                {
                    Console.ResetColor();
                }
                else if (i == 13)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 15)
                {
                    Console.ResetColor();
                }
                else if (i == 17)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 18)
                {
                    Console.ResetColor();
                }
                else if (i == 19)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 20)
                {
                    Console.ResetColor();
                }
                else if (i == 23)
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                }
                else if (i == 24)
                {
                    Console.ResetColor();
                }
                else if (i == 25)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 26)
                {
                    Console.Clear();
                    Console.ResetColor();
                }
                else if (i == 28)
                {
                    Console.Clear();
                    Console.WriteLine($"{introArt[1],25}");
                    Console.ForegroundColor = ConsoleColor.Yellow;
                }
                else if (i == 29)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 30)
                {
                    Console.ForegroundColor = ConsoleColor.Yellow;
                }
                else if (i == 31)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 32)
                {
                    Console.Clear();
                    Console.ResetColor();
                    Console.WriteLine($"{introArt[2],25}");
                    Console.ForegroundColor = ConsoleColor.Yellow;
                }
                else if (i == 33)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 35)
                {
                    Console.ForegroundColor = ConsoleColor.Yellow;
                }
                else if (i == 38)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 41)
                {
                    Console.ForegroundColor = ConsoleColor.Yellow;
                }
                else if (i == 42)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 45)
                {
                    Console.ForegroundColor = ConsoleColor.Yellow;
                }
                else if (i == 48)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }
                else if (i == 49)
                {
                    Console.ForegroundColor = ConsoleColor.Yellow;
                }
                else if (i == 52)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                }

                Console.Write($"{story[i],130}");
                Thread.Sleep(3000);
                if (Console.KeyAvailable)
                {
                    Console.ReadLine();
                    break;
                }
                int currentLine = Console.CursorLeft;
                Console.SetCursorPosition(0, Console.CursorTop);
                Console.Write(new string(' ', currentLine));
                Console.SetCursorPosition(0, Console.CursorTop);
            }
            Console.Clear();
            Console.ForegroundColor = ConsoleColor.Cyan;
            foreach (string str in logo2)
            {
                Console.Write(str);
                Thread.Sleep(100);
            }
            Thread.Sleep(1000);

            Console.WriteLine("소환사의 협곡에 오신것을 환영합니다." +
                "\n소환사님의 이름은 무엇인가요.\n");
            Console.Write(">>");
            name = Console.ReadLine(); // 이름 입력 
            Console.Clear();
            Console.WriteLine($"{name} (이)라는 이름이 맞으십니까?\n\n1. 맞습니다\n2. 아닙니다\n\n");
            act = Console.ReadLine();

            while (true)
            {
                Console.Clear();
                if (act == "1")
                {
                    break;
                }
                else if (act == "2")
                {
                    Console.Clear();
                    Console.WriteLine("소환사님의 이름을 다시 알려주십시오\n\n");
                    name = Console.ReadLine();
                }
                else
                {
                    Console.WriteLine("솔킬머신이란 놈이 이거 하나 제대로 못하나\n\n");
                    Console.WriteLine($"이름이 {name} 맞냐고 아니냐고\n\n1. 맞습니다\n2. 아닙니다.\n\n");
                    act = Console.ReadLine();
                    continue;
                }
                Console.Clear();
                Console.WriteLine($"{name} 이름이 맞으십니까?\n\n1. 맞습니다\n2. 아닙니다\n\n");
                act = Console.ReadLine();
            }

            Console.WriteLine($"{name} 소환사님 과연 이름부터가 휘황찬란하시군요\n소환사님을 위한 챔피언을 준비했습니다 어서 골라보시지요\n\n" +
                $"1. 가렌 (전사)\n2. 럭스 (마법사)\n3. 제드 (암살자)\n4. 애쉬 (궁수)\n\n");
            Console.Write(">>");
            act = Console.ReadLine();
            while (true)
            {
                if (act == "1")
                {
                    Console.Clear();
                    selectedJob = JobDatabase.GetJobByName("전사");
                    break;
                }
                else if (act == "2")
                {
                    Console.Clear();
                    selectedJob = JobDatabase.GetJobByName("마법사");
                    break;
                }
                else if (act == "3")
                {
                    Console.Clear();
                    selectedJob = JobDatabase.GetJobByName("도적");
                    break;
                }
                else if (act == "4")
                {
                    Console.Clear();
                    selectedJob = JobDatabase.GetJobByName("궁수");
                    break;
                }
                else
                {
                    Console.Clear(); Console.WriteLine("마 니 솔킬머신 맞나?\n혹시 솔킬 당하는 머신이가?\n단디 해라이\n\n" +
                        "1. 가렌 (전사)\n2. 럭스 (마법사)\n3. 제드 (암살자)\n4. 애쉬 (궁수)\n\n");
                    Console.Write(">>");
                    act = Console.ReadLine();
                }
            }
            string jobDisplayName = selectedJob.DisplayName ?? selectedJob.Name;
            Console.WriteLine($"{jobDisplayName}을(를) 고르시다니 기대가 되는군요.");
            Console.ReadKey();
            gameManager.CreatdPlayer(name, selectedJob);
        }
        #endregion

        #region 메인 화면
        public void MainScreen()
        {
            Console.Clear();
            Console.WriteLine("이 곳에서 던전으로 들어가기 전 활동을 할 수 있습니다\n\n" +
                             "1. 상태보기\n2. 인벤토리\n3. 탐험하기\n4. 상점\n5. 휴식\n\n" +
                             "원하시는 행동을 입력해주세요");
            Console.Write(">>");
        }

        public void Rest()
        {
            Console.Clear();
            Console.WriteLine("지친 피로를 충분히 풀고 있습니다\n챔피언의 체력과 마나가 모두 찹니다.");
            gameManager.Player.Restore();
            Console.ReadKey(true);
            gameManager.GameMain();
        }

        public void ViewStatus() // 상태창
        {
            var player = gameManager.Player;

            Console.Clear();
            PrintColoredLine("═══════════════════════════════════════════════", ConsoleColor.Cyan);
            PrintColoredLine("                🧙 플레이어 상태창               ", ConsoleColor.Cyan);
            PrintColoredLine("═══════════════════════════════════════════════", ConsoleColor.Cyan);
            Console.WriteLine();

            PrintColoredLine($"이름 : {player.Name,-15} 직업 : {player.Job.DisplayName}", ConsoleColor.Magenta);
            Console.WriteLine($"레벨 : {player.Level,-15} 경험치 : {player.Exp}");
            Console.WriteLine();

            Console.WriteLine("───────────────────────────────");
            PrintStatusBar("체력", player.HP, player.MaxHP, ConsoleColor.Green, ShowHPBarInline);
            PrintStatusBar("마나", player.MP, player.MaxMP, ConsoleColor.Blue, ShowMPBarInline);
            Console.WriteLine("───────────────────────────────");

            PrintColoredLine($"공격력 : {player.MaxAttack}", ConsoleColor.Red);
            PrintColoredLine($"방어력 : {player.MaxDefense}", ConsoleColor.DarkGreen);
            PrintColoredLine($"골드   : {player.Gold} G", ConsoleColor.Yellow);
            Console.WriteLine();

            PrintColoredLine("═══════════════════════════════════════════════", ConsoleColor.Cyan);
            Console.WriteLine("아무 키나 눌러 돌아가기...");
            Console.ReadKey(true);
            gameManager.GameMain();
        }

        private void PrintStatusBar(string label, int current, int max, ConsoleColor color, Action<int, int> barAction)
        {
            Console.ForegroundColor = color;
            Console.Write($"{label} : ");
            barAction(current, max);
            Console.ResetColor();
            Console.WriteLine($"  {current}/{max}");
        }
        #endregion

        #region 배틀
        public void RunBattleLoop(Battle battle)
        {
            AddLog("전투가 시작되었습니다!");

            while (battle.BattleState == Battle.BattleResult.InProgress)
            {
                RenderBattleScreen(battle);
                ProcessPlayerAction(battle);

                battle.EndCheck();
                if (battle.BattleState != Battle.BattleResult.InProgress) break;

                battle.EnemyTurn();
                AddLog("적의 턴이 진행되었습니다.");
                battle.EndCheck();

                Thread.Sleep(500);
            }

            HandleBattleEnd(battle);
        }

        private void ProcessPlayerAction(Battle battle)
        {
            ShowActionMenu();
            string input = Console.ReadLine();

            switch (input)
            {
                case "1":
                    int idx = SelectEnemyIndex(battle);
                    if (idx >= 0)
                    {
                        battle.Attack(idx);
                        AddLog($"{gameManager.Player.Name}이(가) 적 [{idx + 1}]을(를) 공격했습니다. 피해: {battle.AtkRand}");
                    }
                    break;
                case "2":
                    AddLog("스킬 사용(미구현)");
                    break;
                case "3":
                    AddLog("포션 사용(미구현)");
                    break;
                case "4":
                    AddLog("도망 시도...");
                    return;
                default:
                    AddLog("올바른 입력을 해주세요 (1~4).");
                    break;
            }
        }

        private void HandleBattleEnd(Battle battle)
        {
            RenderBattleScreen(battle);

            if (battle.BattleState == Battle.BattleResult.Victory)
            {
                battle.ClearReward();
                AddLog($"전투 승리! 획득 EXP: {battle.RewardExp}, Gold: {battle.RewardGold}");
            }
            else if (battle.BattleState == Battle.BattleResult.Defeat)
            {
                AddLog("전투 패배... 게임 오버.");
            }

            RenderBattleScreen(battle);
            Console.WriteLine("\n계속하려면 아무 키나 누르세요...");
            Console.ReadKey(true);
        }

        private void RenderBattleScreen(Battle battle)
        {
            Console.Clear();
            WriteLineDivider('=');
            Console.WriteLine($"  ⚔️  Stage {battle.Stage} - 전투  ⚔️");
            WriteLineDivider('=');
            Console.WriteLine();

            ShowPlayerStatus();
            Console.WriteLine();
            WriteLineDivider('-');
            ShowEnemies(battle);
            WriteLineDivider('-');
            ShowBattleLog();
        }

        private void ShowPlayerStatus()
        {
            var player = gameManager.Player;
            Console.WriteLine("[소환사]");
            Console.WriteLine($"{player.Name}  Lv.{player.Level}  ({player.Job})");

            Console.Write("HP ");
            ShowHPBar(player.HP, player.MaxHP);
            Console.WriteLine();

            Console.Write("MP ");
            ShowMPBar(player.MP, player.MaxMP);
            Console.WriteLine();

            Console.WriteLine($"Gold: {player.Gold}  Exp: {player.Exp}");
        }

        private void ShowEnemies(Battle battle)
        {
            Console.WriteLine("[적 목록]");
            if (battle.Enemies == null || battle.Enemies.Count == 0)
            {
                Console.WriteLine("적이 없습니다.");
                return;
            }

            for (int i = 0; i < battle.Enemies.Count; i++)
            {
                var enemy = battle.Enemies[i];
                string status = enemy.HP > 0 ? $"{enemy.HP}/{enemy.MaxHP}" : "💀 사망";
                Console.Write($"[{i + 1}] Lv.{enemy.Level} {enemy.Name,-15} ");
                ShowHPBarInline(enemy.HP, enemy.MaxHP);
                Console.WriteLine($"  {status}");
            }
        }

        private void ShowBattleLog()
        {
            Console.WriteLine("\n[Battle Log]");
            foreach (var line in battleLog.Skip(Math.Max(0, battleLog.Count - LogShowCount)))
            {
                Console.WriteLine("- " + line);
            }
            Console.WriteLine();
        }

        private void ShowActionMenu()
        {
            Console.WriteLine();
            WriteLineDivider('─', 28);
            Console.WriteLine("행동을 선택하세요:");
            Console.WriteLine("1. 일반 공격");
            Console.WriteLine("2. 스킬 사용");
            Console.WriteLine("3. 포션 사용");
            Console.WriteLine("4. 도망");
            Console.Write(">> ");
        }

        private int SelectEnemyIndex(Battle battle)
        {
            if (battle.Enemies == null || battle.Enemies.Count == 0)
            {
                AddLog("공격할 적이 없습니다.");
                return -1;
            }

            Console.WriteLine("대상을 선택하세요. (번호, 취소: 0)");
            for (int i = 0; i < battle.Enemies.Count; i++)
            {
                var m = battle.Enemies[i];
                Console.WriteLine($"{i + 1}. {m.Name} {(m.HP > 0 ? $"HP:{m.HP}/{m.MaxHP}" : "[사망]")}");
            }
            Console.Write(">> ");

            if (!int.TryParse(Console.ReadLine(), out int pick))
            {
                AddLog("잘못된 입력: 숫자를 입력하세요.");
                return -1;
            }

            if (pick == 0) return -1;

            if (pick < 1 || pick > battle.Enemies.Count)
            {
                AddLog("유효한 적 번호를 입력하세요.");
                return -1;
            }

            if (battle.Enemies[pick - 1].HP <= 0)
            {
                AddLog("이미 사망한 적입니다. 다른 대상을 선택하세요.");
                return -1;
            }

            return pick - 1;
        }

        private void AddLog(string msg)
        {
            string time = DateTime.Now.ToString("HH:mm:ss");
            battleLog.Add($"[{time}] {msg}");

            if (battleLog.Count > MAX_LOG_SIZE)
                battleLog.RemoveRange(0, LOG_TRIM_SIZE);
        }
        #endregion

        #region HP/MP 바 출력
        private void ShowHPBar(int current, int max)
        {
            ShowHPBarInline(current, max);
            Console.Write($"  {current}/{max}");
        }

        private void ShowHPBarInline(int current, int max)
        {
            ShowBarInline(current, max, HpBarLength, GetHPColor);
        }

        private void ShowMPBar(int current, int max)
        {
            ShowMPBarInline(current, max);
            Console.Write($"  {current}/{max}");
        }

        private void ShowMPBarInline(int current, int max)
        {
            ShowBarInline(current, max, MpBarLength, _ => ConsoleColor.Blue);
        }

        private void ShowBarInline(int current, int max, int barLength, Func<double, ConsoleColor> colorSelector)
        {
            double ratio = max <= 0 ? 0.0 : (double)current / max;
            ratio = Math.Clamp(ratio, 0.0, 1.0);
            int filled = (int)Math.Round(ratio * barLength);
            int empty = barLength - filled;

            Console.Write("[");
            Console.ForegroundColor = colorSelector(ratio);
            Console.Write(new string('█', filled));
            Console.ResetColor();
            Console.Write(new string('░', empty));
            Console.Write("]");
        }

        private ConsoleColor GetHPColor(double ratio)
        {
            if (ratio > 0.4) return ConsoleColor.Green;
            if (ratio > 0.2) return ConsoleColor.Yellow;
            return ConsoleColor.Red;
        }
        #endregion

        #region 인벤토리
        public void ShowInventory()
        {
            Console.Clear();
            PrintColoredLine("============ [ 🎒 인벤토리 ] ============", ConsoleColor.Cyan);

            var weapons = gameManager.inventory.GetWeapons();
            var armors = gameManager.inventory.GetArmors();
            var potions = gameManager.inventory.GetPotions();

            // 장착 여부 표시 포함
            ShowItemCategory("무기", weapons, w =>
            {
                Messages.Equipped(w.IsEquipped);
                SetRarityColor(w.Rarity);
                return $"  - {w.Name} | {w.ItemStats()} | 희귀도: {w.Rarity}";
            });

            ShowItemCategory("방어구", armors, a =>
            {
                Messages.Equipped(a.IsEquipped);
                SetRarityColor(a.Rarity);
                return $"  - {a.Name} | {a.ItemStats()} | 희귀도: {a.Rarity}";
            });

            ShowItemCategory("포션", potions, p =>
            {
                SetRarityColor(p.Rarity);
                return $"  - {p.Name} | {p.ItemStats()} | 개수: {p.PotionCount}";
            });


            Console.WriteLine("=====================================");
            Console.WriteLine("1. 포션 사용\n2. 아이템 장착\n0. 나가기");
            Console.Write(">> ");
            int choice = Messages.ReadInput(0, 2);

            switch (choice)
            {
                case 0:
                    gameManager.GameMain();
                    break;
                case 1:
                    gameManager.Player.UsePotion();
                    Console.ReadKey();
                    ShowInventory();
                    break;
                case 2:
                    HandleEquipItem();
                    break;
            }
        }

        private void HandleEquipItem()
        {
            var items = gameManager.inventory.Items;

            if (items.Count == 0)
            {
                Console.WriteLine("장착할 아이템이 없습니다.");
                Console.ReadKey();
                ShowInventory();
                return;
            }

            Console.Clear();
            Console.WriteLine("========= [ 장착 가능한 아이템 ] =========");
            for (int i = 0; i < items.Count; i++)
            {
                var item = items[i];
                Messages.Equipped(item.IsEquipped);
                Console.WriteLine($"{i + 1}. {item.Name,-15} | {item.ItemStats()} | {item.Rarity}");
            }

            Console.WriteLine("=====================================");
            Console.WriteLine("장착할 아이템 번호를 입력하세요 (0: 돌아가기)");
            Console.Write(">> ");
            int choice = Messages.ReadInput(0, items.Count);

            if (choice == 0)
            {
                ShowInventory();
                return;
            }

            var selectedItem = items[choice - 1];
            gameManager.Player.EquipItem(selectedItem);
            Console.WriteLine($"\n{selectedItem.Name} 장착 완료!");
            Console.ReadKey();

            ShowInventory(); // 장착 후 다시 인벤토리로
        }

        private void ShowItemCategory<T>(string categoryName, List<T> items, Func<T, string> formatter) where T : Items
        {
            PrintColoredLine($"\n[{categoryName}]", ConsoleColor.Yellow);

            if (items.Count == 0)
            {
                Console.WriteLine($"  (보유 {categoryName} 없음)");
                return;
            }

            foreach (var item in items)
            {
                SetRarityColor(item.Rarity);
                Console.WriteLine(formatter(item));
                Console.ResetColor();
            }
        }
        #endregion

        #region 상점
        public void ShowShop()
        {
            Console.Clear();
            PrintColoredLine("============== [ 🏪 상점 ] ==============", ConsoleColor.Yellow);

            var shopItems = gameManager.shop.GetShopInventory();

            Console.WriteLine("[판매 목록]");
            for (int i = 0; i < shopItems.Count; i++)
            {
                var item = shopItems[i];
                SetRarityColor(item.Rarity);
                Console.WriteLine($"{i + 1}. {item.Name,-15} | {item.Price,5}G | {item.ItemType(),-5} | {item.ItemStats()} | {item.Rarity}");
                Console.ResetColor();
            }

            Console.WriteLine("====================================");
            Console.WriteLine("1) 구매   2) 판매   0) 뒤로가기");
            Console.Write(">> ");

            int choice = Messages.ReadInput(0, 2);
            switch (choice)
            {
                case 0:
                    gameManager.GameMain();
                    break;
                case 1:
                    HandleShopPurchase(gameManager.shop);
                    break;
                case 2:
                    HandleShopSell(gameManager.shop);
                    break;
            }
        }

        private void HandleShopPurchase(Shop shop)
        {
            var items = shop.GetShopInventory();
            foreach (var item in items)
            {
                SetRarityColor(item.Rarity);
                Console.WriteLine($"{items.IndexOf(item) + 1}. {item.Name,-15} | {item.Price,5}G | {item.ItemType(),-5} | {item.ItemStats()} | {item.Rarity}");
                Console.ResetColor();
            }

            Console.WriteLine("\n구매할 아이템 번호를 입력하세요 (0: 돌아가기): ");
            int choice = Messages.ReadInput(0, items.Count);

            if (choice == 0)
            {
                ShowShop();
            }

            var selectedItem = items[choice - 1];
            bool success = shop.BuyItem(selectedItem);

            PrintColoredLine(
                success
                    ? $"\n'{selectedItem.Name}' 구매 완료! (남은 골드: {gameManager.Player.Gold}G)"
                    : "\n구매에 실패했습니다.",
                success ? ConsoleColor.Green : ConsoleColor.Red
            );
            Console.ReadKey();
            HandleShopPurchase(shop);
        }

        private void HandleShopSell(Shop shop)
        {
            var inventory = gameManager.inventory.Items;

            if (inventory.Count == 0)
            {
                Console.WriteLine("판매할 아이템이 없습니다.");
                Console.ReadKey();
                ShowShop();
            }

            Console.Clear();
            Console.WriteLine("=========== [ 판매 목록 ] ===========");
            for (int i = 0; i < inventory.Count; i++)
            {
                var item = inventory[i];
                Console.WriteLine($"{i + 1}. {item.Name,-15} | {item.Price / 2,5}G | {item.ItemType()}");
            }

            Console.WriteLine("===================================");
            Console.WriteLine("판매할 아이템 번호를 입력하세요 (0: 돌아가기): ");
            Console.Write(">> ");
            int choice = Messages.ReadInput(0, inventory.Count);

            if (choice == 0)
            {
                ShowShop();
            }

            var selectedItem = inventory[choice - 1];
            bool success = shop.SellItem(selectedItem);

            PrintColoredLine(
                success
                    ? $"\n'{selectedItem.Name}' 판매 완료! (+{selectedItem.Price / 2}G)"
                    : "\n판매에 실패했습니다.",
                success ? ConsoleColor.Green : ConsoleColor.Red
            );
            Console.WriteLine($"현재 골드: {gameManager.Player.Gold}G");
            Console.ReadKey();
        }
        #endregion

        #region 헬퍼 메서드
        private void SetRarityColor(string rarity) // 희귀도에 따른 색상 설정
        {
            var rarityColors = new Dictionary<string, ConsoleColor>
            {
                {"common", ConsoleColor.White},
                {"rare", ConsoleColor.Blue},
                {"epic", ConsoleColor.Magenta},
                {"legend", ConsoleColor.Yellow},
                {"myth", ConsoleColor.Cyan},
                {"transcended", ConsoleColor.Red}
            };

            Console.ForegroundColor = rarityColors.ContainsKey(rarity)
                ? rarityColors[rarity]
                : ConsoleColor.White;
        }

        private void PrintColoredLine(string text, ConsoleColor color) // 색상 있는 텍스트 출력
        {
            Console.ForegroundColor = color;
            Console.WriteLine(text);
            Console.ResetColor();
        }

        private void WriteLineDivider(char c = '-', int repeat = 40) // 선 구분선 출력
        {
            Console.WriteLine(new string(c, repeat));
        }
        #endregion
    }
}